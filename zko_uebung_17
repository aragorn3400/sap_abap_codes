*&---------------------------------------------------------------------*
*& Report  BC402_PCt_CONN_LIST
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  zbc402_99_conn_list MESSAGE-ID bc402.

TYPES: BEGIN OF gty_s_conn,
         carrid   TYPE spfli-carrid,
         connid   TYPE spfli-connid,
         cityfrom TYPE spfli-cityfrom,
         cityto   TYPE spfli-cityto,
         deptime  TYPE spfli-deptime,
         arrtime  TYPE spfli-arrtime,
         period   TYPE spfli-period,
       END OF gty_s_conn.

TYPES gty_t_conn TYPE STANDARD TABLE OF gty_s_conn
                 WITH NON-UNIQUE DEFAULT KEY.

DATA gt_conn TYPE gty_t_conn.

DATA gv_msg TYPE string.

DATA: go_alv TYPE REF TO cl_salv_table,
      go_evt TYPE REF TO cl_salv_events_table,
      gx_msg TYPE REF TO cx_salv_msg.

*----------------------------------------------------------------------*
*       CLASS lcl_handler DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_handler DEFINITION.

  PUBLIC SECTION.

    CLASS-METHODS:
      on_double_click FOR EVENT double_click
                  OF if_salv_events_actions_table
        IMPORTING row column.

ENDCLASS.                    "lcl_handler DEFINITION

*----------------------------------------------------------------------*
*       CLASS lcl_handler IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_handler IMPLEMENTATION.

  METHOD on_double_click.

    DATA ls_conn LIKE LINE OF gt_conn.

    READ TABLE gt_conn INTO ls_conn INDEX row.

    CASE column.

      WHEN 'CARRID'.
        SET PARAMETER ID 'CAR' FIELD ls_conn-carrid.
        CALL TRANSACTION 'BC402MCAR' AND SKIP FIRST SCREEN.
      WHEN OTHERS.
        SUBMIT zbc402_99_flight_list_osql
                WITH pa_car = ls_conn-carrid
                WITH so_con = ls_conn-connid
                " VIA SELECTION-SCREEN
                AND RETURN.

    ENDCASE.

  ENDMETHOD.                    "on_double_click

ENDCLASS.                    "lcl_handler IMPLEMENTATION


START-OF-SELECTION.

  SELECT carrid connid cityfrom cityto
         deptime arrtime period
    FROM spfli
    INTO TABLE gt_conn.

  TRY.
      CALL METHOD cl_salv_table=>factory
        IMPORTING
          r_salv_table = go_alv
        CHANGING
          t_table      = gt_conn.
    CATCH cx_salv_msg INTO gx_msg.
      gv_msg = gx_msg->get_text( ).
      MESSAGE gv_msg TYPE 'E'.
  ENDTRY.

  go_evt = go_alv->get_event( ).

  SET HANDLER lcl_handler=>on_double_click
          FOR go_evt.

  go_alv->display( ).

-----
2.Programm
*&---------------------------------------------------------------------*
*& Report  BC402_INS_FLIGHT_LIST_STAT
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  bc402_ins_flight_list_stat MESSAGE-ID bc402.

CLASS lcl_flight_data DEFINITION CREATE PRIVATE.

  PUBLIC SECTION.

    TYPES:
      BEGIN OF ty_s_flight,
        carrid     TYPE sflight-carrid,
        connid     TYPE sflight-connid,
        fldate     TYPE sflight-fldate,
        planetype  TYPE sflight-planetype,
        price      TYPE sflight-price,
        currency   TYPE sflight-currency,
        seatsmax   TYPE sflight-seatsmax,
        seatsocc   TYPE sflight-seatsocc,
        percentage TYPE p LENGTH 8 DECIMALS 2,
      END OF ty_s_flight.

    TYPES:
      ty_t_flights   TYPE STANDARD TABLE OF ty_s_flight,
      ty_t_con_range TYPE RANGE OF sflight-connid.


    CLASS-METHODS
      get_instance
        IMPORTING
          iv_carrid          TYPE sflight-carrid
          it_con_range       TYPE ty_t_con_range
        RETURNING
          VALUE(ro_instance) TYPE REF TO lcl_flight_data
        RAISING
          cx_bc402_no_data.

    CLASS-METHODS
      check_existence_of_data
        IMPORTING
          iv_carrid    TYPE sflight-carrid
          it_con_range TYPE ty_t_con_range
        RAISING
          cx_bc402_no_data.

    METHODS
      display.

  PRIVATE SECTION.

    DATA:
      mt_flights TYPE ty_t_flights.

    METHODS
      constructor
        IMPORTING
          iv_carrid    TYPE sflight-carrid
          it_con_range TYPE ty_t_con_range.

    METHODS set_percentage.

ENDCLASS.

CLASS lcl_flight_data IMPLEMENTATION.

  METHOD get_instance.

* Check existence of data

    check_existence_of_data(
        iv_carrid    = iv_carrid
        it_con_range = it_con_range ).

* create instance

    CREATE OBJECT ro_instance
      EXPORTING
        iv_carrid    = iv_carrid
        it_con_range = it_con_range.

  ENDMETHOD.

  METHOD check_existence_of_data.

    "DATA lt_carrid TYPE TABLE OF sflight-carrid.

* Check existence of data
    SELECT carrid FROM sflight INTO TABLE  @DATA(lt_carrid)
                  WHERE carrid = @iv_carrid
                    AND connid IN @it_con_range.
    IF lines( lt_carrid ) = 0.
      RAISE EXCEPTION TYPE cx_bc402_no_data.
    ENDIF.


  ENDMETHOD.
  METHOD constructor.

    SELECT carrid, connid, fldate, planetype, price, currency, seatsmax, seatsocc
      FROM sflight INTO TABLE @mt_flights
             WHERE carrid = @iv_carrid
               AND connid IN @it_con_range.

* calculate percentage and sort

    set_percentage( ).

    SORT mt_flights BY percentage DESCENDING.

  ENDMETHOD.


  METHOD set_percentage.

    LOOP AT mt_flights INTO DATA(ls_flight).

      ls_flight-percentage = ls_flight-seatsocc / ls_flight-seatsmax * 100.

      MODIFY mt_flights FROM ls_flight TRANSPORTING percentage.

    ENDLOOP.

  ENDMETHOD.
  METHOD display.

    LOOP AT mt_flights INTO DATA(ls_flight).

      WRITE / COND #( WHEN ls_flight-percentage > 90 THEN icon_green_light
                        WHEN ls_flight-percentage > 50 THEN icon_yellow_light
                        ELSE icon_red_light
                         ) AS ICON.
      WRITE:
          ls_flight-carrid,
          ls_flight-connid,
          ls_flight-fldate,
          ls_flight-planetype,
          ls_flight-seatsmax,
          ls_flight-seatsocc,
          ls_flight-percentage,
          ls_flight-price  CURRENCY ls_flight-currency,
          ls_flight-currency.

    ENDLOOP.

  ENDMETHOD.


ENDCLASS.


"DATA gx_no_data     TYPE REF TO cx_bc402_no_data.

* Selection Screen
DATA gs_sflight_dummy TYPE sflight.
PARAMETERS pa_car TYPE sflight-carrid.
SELECT-OPTIONS so_con FOR gs_sflight_dummy-connid.

START-OF-SELECTION.

  TRY.
      lcl_flight_data=>get_instance(
           iv_carrid    = pa_car
           it_con_range = so_con[] )->display( ).

    CATCH cx_bc402_no_data INTO DATA(gx_no_data).

      MESSAGE gx_no_data TYPE 'E'.

  ENDTRY.
  
 ------
 3.Programm (Transaction Code;BC402MCAR)
   *&---------------------------------------------------------------------*
*& Modulpool         SAPMBC400_IND_CARRIER
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*


INCLUDE MBC402_IND_CARRIERTOP.

INCLUDE MBC402_IND_CARRIERI01.

INCLUDE MBC402_IND_CARRIERI02.

*&---------------------------------------------------------------------*
*& Include MBC402_IND_CARRIERTOP
*&
*& Modulpool        SAPMBC402_IND_CARRIER
*&
*&---------------------------------------------------------------------*

PROGRAM  sapmbc402_ind_carrier MESSAGE-ID bc402.

DATA ok_code TYPE syucomm.

TABLES bc402_s_carrier.

*----------------------------------------------------------------------*
***INCLUDE MBC402_iD_CARRIER_I01 .
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.

  CASE ok_code.
    WHEN 'GO' OR space.
      SELECT SINGLE carrid carrname currcode url
        FROM scarr
        INTO bc402_s_carrier
       WHERE carrid = bc402_s_carrier-carrid.
      IF sy-subrc <> 0.
        MESSAGE e010(bc402) WITH bc402_s_carrier-carrid.
      ENDIF.
      SET SCREEN 200.
    WHEN OTHERS.
      SET SCREEN 100.
  ENDCASE.


ENDMODULE.                 " USER_COMMAND_0100  INPUT

*----------------------------------------------------------------------*
***INCLUDE MBC400_GSD_CARRIER_I02 .
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0200  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0200 INPUT.

  CASE ok_code.
    WHEN 'BACK'.
      SET SCREEN 100.
    WHEN 'EXIT'.
      SET SCREEN 0.
  ENDCASE.

ENDMODULE.                 " USER_COMMAND_0200  INPUT
