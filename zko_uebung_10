* *&---------------------------------------------------------------------*
*& Report ZKO_ORNEK_03
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT zko_ornek_03.

" Ein Beispiel für die Aktualisierung der Tabelle durch Erstellen einer Schaltfläche mit GUI-Status

INCLUDE zko_ornek_03_top.
INCLUDE zko_ornek_03_frm.

START-OF-SELECTION.

PERFORM get_data.
PERFORM get_fcat.
PERFORM get_layout.
PERFORM display.

*&---------------------------------------------------------------------*
*& Include          ZKO_ORNEK_03_TOP
*&---------------------------------------------------------------------*
DATA: gt_scarr    TYPE TABLE OF scarr, 
      gs_scarr    TYPE scarr,
      gt_scarr_01 TYPE TABLE OF scarr,
      gt_fcat     TYPE lvc_t_fcat,
      gs_layout   TYPE lvc_s_layo.

DATA: lc_grid         TYPE REF TO cl_gui_alv_grid,
      lt_row_no       TYPE lvc_t_roid,
      ls_row_no       TYPE lvc_s_roid,
      lv_no_lines     TYPE i,
      lt_table_update TYPE TABLE OF zko_scarr_01,
      lt_fcat_update  TYPE slis_t_fieldcat_alv,
      ls_fcat_update  TYPE slis_fieldcat_alv,
      ls_table_update TYPE zko_scarr_01,
      answer_update.
      
*&---------------------------------------------------------------------*
*& Include          ZKO_ORNEK_03_FRM
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*& Form GET_DATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM get_data .

  SELECT    * FROM scarr INTO TABLE gt_scarr.

  LOOP AT gt_scarr INTO gs_scarr.
    INSERT zko_scarr_01 FROM gs_scarr.
  ENDLOOP.

  SELECT * FROM zko_scarr_01 INTO TABLE gt_scarr_01.

ENDFORM.

*&---------------------------------------------------------------------*
*& Form GET_FCAT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM get_fcat .
  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_structure_name       = 'ZKO_SCARR_01'
      i_bypassing_buffer     = 'X'
    CHANGING
      ct_fieldcat            = gt_fcat
    EXCEPTIONS
      inconsistent_interface = 1
      program_error          = 2
      OTHERS                 = 3.
ENDFORM.

*&---------------------------------------------------------------------*
*& Form DISPLAY
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM display .
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
    EXPORTING
      i_callback_program       = sy-repid
      is_layout_lvc            = gs_layout
      it_fieldcat_lvc          = gt_fcat
      i_callback_pf_status_set = 'MY_STATUS_101'
      i_callback_user_command  = 'MY_COMMAND_101'
    TABLES
      t_outtab                 = gt_scarr_01
    EXCEPTIONS
      program_error            = 1
      OTHERS                   = 2.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form GET_LAYOUT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM get_layout .
  gs_layout-zebra = 'X'.
  gs_layout-cwidth_opt = 'X'.
  gs_layout-sel_mode = 'A'.
ENDFORM.


FORM my_status_101 USING rt_extab TYPE slis_t_extab.
  SET PF-STATUS 'STATUS_101'.
ENDFORM.

FORM my_command_101 USING rucomm TYPE sy-ucomm
                          selfield TYPE slis_selfield.

  CASE rucomm.
    WHEN '&UPDATE'.
      PERFORM update.
    WHEN '&BACK'.
      LEAVE PROGRAM.
  ENDCASE.

ENDFORM.



*&---------------------------------------------------------------------*
*& Form UPDATE
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM update .

  CALL FUNCTION 'GET_GLOBALS_FROM_SLVC_FULLSCR'
    IMPORTING
      e_grid = lc_grid.

  CALL METHOD lc_grid->get_selected_rows
    IMPORTING
*     et_index_rows =
      et_row_no = lt_row_no.

  DESCRIBE TABLE lt_row_no LINES lv_no_lines.

  IF lv_no_lines > 1.                                                 
    MESSAGE 'Bitte wählen Sie nur eine Zeile aus' TYPE 'S' DISPLAY LIKE 'E'.
  ELSEIF lv_no_lines = 0.
    MESSAGE 'Bitte wählen Sie mindestens eine Zeile aus' TYPE 'S' DISPLAY LIKE 'E'.
  ELSE.
    READ TABLE lt_row_no INTO ls_row_no INDEX 1.    

    CHECK sy-subrc IS INITIAL.     
    READ TABLE gt_scarr_01 INTO gs_scarr INDEX ls_row_no-row_id. 
    CHECK sy-subrc IS INITIAL.

    APPEND gs_scarr TO lt_table_update.          
    CLEAR: gs_scarr.

    CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE'   
      EXPORTING
        i_structure_name       = 'zko_scarr_01'
        i_bypassing_buffer     = 'X'
      CHANGING
        ct_fieldcat            = lt_fcat_update   
      EXCEPTIONS
        inconsistent_interface = 1
        program_error          = 2
        OTHERS                 = 3.

    LOOP AT lt_fcat_update INTO ls_fcat_update.   

      CASE ls_fcat_update-fieldname .
        WHEN 'CARRID' OR 'CARRNAME' OR 'CURRCODE' OR 'URL'.
          ls_fcat_update-edit = 'X'.        
          ls_fcat_update-input = 'X'.
          MODIFY lt_fcat_update FROM ls_fcat_update.    
          CLEAR ls_fcat_update.
      ENDCASE.


    ENDLOOP.

    CALL FUNCTION 'REUSE_ALV_POPUP_TO_SELECT'      
      EXPORTING
        i_title               = 'Hier können Sie Informationen eingeben'
        i_screen_start_column = 5                      
        i_screen_start_line   = 13
        i_screen_end_column   = 120
        i_screen_end_line     = 18
        i_tabname             = 'LT_TABLE_UPDATE'
        it_fieldcat           = lt_fcat_update
      TABLES
        t_outtab              = lt_table_update
      EXCEPTIONS
        program_error         = 1
        OTHERS                = 2.

    READ TABLE lt_table_update INTO ls_table_update INDEX 1.

    CHECK sy-subrc IS INITIAL.

    READ TABLE gt_scarr_01 WITH KEY carrid = ls_table_update-carrid INTO gs_scarr.  
    
    CHECK sy-subrc IS INITIAL.

    IF gs_scarr NE ls_table_update.


      CALL FUNCTION 'POPUP_TO_CONFIRM'
        EXPORTING
          text_question         = 'Möchten Sie die Änderungen speichern'
          text_button_1         = 'Ja'     "(001) 
          icon_button_1         = 'ICON CHECKED'
          text_button_2         = 'Nein'   "(002) 
          icon_button_2         = 'ICON_CANCEL '
          display_cancel_button = ''
        IMPORTING
          answer                = answer_update
        EXCEPTIONS
          text_not_found        = 1
          OTHERS                = 2.

      IF answer_update = '1'.

        UPDATE zko_scarr_01 SET carrid = ls_table_update-carrid
                                carrname = ls_table_update-carrname
                                currcode = ls_table_update-currcode
                                url = ls_table_update-url WHERE carrid = ls_table_update-carrid.

        CLEAR: ls_table_update,lt_table_update,gs_scarr.
        REFRESH gt_scarr.
        PERFORM get_data.
        MESSAGE 'Vorgenommene Änderungen erfolgreich gespeichert.' TYPE 'S'.
        PERFORM display.
        
      ELSE.
        MESSAGE 'Es wurden keine Änderungen vorgenommen.' TYPE 'S' DISPLAY LIKE 'E'.
      ENDIF.
    ELSE.
      MESSAGE 'Es wurden keine Änderungen vorgenommen.' TYPE 'S' DISPLAY LIKE 'E'.
    ENDIF.
  ENDIF.

ENDFORM.
